#!/usr/bin/env bash
set -e

if [ "$1" = "--debug" ]; then
  export DEVBOX_DEBUG=1
  shift
fi

if [ -n "$DEVBOX_DEBUG" ]; then
  # https://wiki-dev.bash-hackers.org/scripting/debuggingtips#making_xtrace_more_useful
  export PS4='+(${BASH_SOURCE}:${LINENO}): ${FUNCNAME[0]:+${FUNCNAME[0]}(): }'
  set -x
fi

abort() {
  {
    if [ "$#" -eq 0 ]; then
      cat -
    else
      echo "devbox: $*"
    fi
  } >&2
  exit 1
}

if enable -f "${BASH_SOURCE%/*}"/../libexec/devbox-realpath.dylib realpath 2>/dev/null; then
  abs_dirname() {
    local path
    path="$(realpath "$1")"
    echo "${path%/*}"
  }
else
  [ -z "$DEVBOX_NATIVE_EXT" ] || abort "failed to load \`realpath' builtin"

  READLINK=$(type -P readlink)
  [ -n "$READLINK" ] || abort "cannot find readlink - are you missing GNU coreutils?"

  resolve_link() {
    $READLINK "$1"
  }

  abs_dirname() {
    local path="$1"

    # Use a subshell to avoid changing the current path
    (
      while [ -n "$path" ]; do
        cd_path="${path%/*}"
        if [[ "$cd_path" != "$path" ]]; then
          cd "$cd_path"
        fi
        name="${path##*/}"
        path="$(resolve_link "$name" || true)"
      done

      echo "$PWD"
    )
  }
fi

if [ -z "${DEVBOX_ROOT}" ]; then
  DEVBOX_ROOT="${HOME}/.devbox"
else
  DEVBOX_ROOT="${DEVBOX_ROOT%/}"
fi
export DEVBOX_ROOT

if [ -z "${DEVBOX_DIR}" ]; then
  DEVBOX_DIR="$PWD"
fi

if [ ! -d "$DEVBOX_DIR" ] || [ ! -e "$DEVBOX_DIR" ]; then
  abort "cannot change working directory to \`$DEVBOX_DIR'"
fi

DEVBOX_DIR=$(cd "$DEVBOX_DIR" && echo "$PWD")
export DEVBOX_DIR

shopt -s nullglob

bin_path="$(abs_dirname "$0")"
for plugin_bin in "${bin_path%/*}"/plugins/*/bin; do
  PATH="${plugin_bin}:${PATH}"
done
# DEVBOX_ROOT can be set to anything, so it may happen to be equal to the base path above,
# resulting in duplicate PATH entries
if [ "${bin_path%/*}" != "$DEVBOX_ROOT" ]; then
  for plugin_bin in "${DEVBOX_ROOT}"/plugins/*/bin; do
    PATH="${plugin_bin}:${PATH}"
  done
fi
export PATH="${bin_path}:${PATH}"

shopt -u nullglob

command="$1"
case "$command" in
"")
  {
    devbox---version
    devbox-help
  } | abort
  ;;
-v | --version)
  exec devbox---version
  ;;
-h | --help)
  exec devbox-help
  ;;
*)
  command_path="$(command -v "devbox-$command" || true)"
  if [ -z "$command_path" ]; then
    if [ "$command" == "shell" ]; then
      abort "shell integration not enabled. Run \`devbox init' for instructions."
    else
      abort "no such command \`$command'"
    fi
  fi

  shift 1
  if [ "$1" = --help ]; then
    if [[ "$command" == "sh-"* ]]; then
      echo "devbox help \"$command\""
    else
      exec devbox-help "$command"
    fi
  else
    exec "$command_path" "$@"
  fi
  ;;
esac
