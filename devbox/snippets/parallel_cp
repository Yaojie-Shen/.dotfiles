#!/usr/bin/env bash
#
# Parallel Copy: Copy directory contents using parallel processing.
# Compatible with MacOS and Linux.
#
# ${1} Name: Source Directory
# ${1} Description: Directory to copy files from
# ${1} Type: PATH
# ${2} Name: Destination Directory
# ${2} Description: Directory to copy files to
# ${2} Type: PATH
# ${3} Name: Parallel Jobs
# ${3} Description: Number of parallel copy jobs
# ${3} Default: 16

set -e

# Check for minimum required arguments
if [ "$#" -lt 2 ]; then
  echo "Usage: $0 <source_dir> <target_dir> [parallel_jobs]"
  exit 1
fi

SRC_DIR="$1"
DST_DIR="$2"
PARALLEL_JOBS="${3:-16}" # Default to 16 parallel jobs if not specified

# Check if the source directory exists
if [ ! -d "$SRC_DIR" ]; then
  echo "Error: source directory '$SRC_DIR' does not exist."
  exit 2
fi

# Check if the destination directory path is valid
if [ -e "$DST_DIR" ] && [ ! -d "$DST_DIR" ]; then
  echo "Error: destination path '$DST_DIR' exists and is not a directory."
  exit 3
fi

# Create the target directory if it doesn't exist
mkdir -p "$DST_DIR"

echo "Copying from '$SRC_DIR' to '$DST_DIR' with $PARALLEL_JOBS parallel jobs..."

# Check if GNU parallel is available
if command -v parallel >/dev/null 2>&1; then
  echo "Using GNU parallel with progress bar..."

  find "$SRC_DIR" -mindepth 1 -maxdepth 1 -print0 |
    parallel --bar --eta -0 -P "$PARALLEL_JOBS" cp -r {} "$DST_DIR"
else
  echo "GNU parallel not found, falling back to xargs..."

  find "$SRC_DIR" -mindepth 1 -maxdepth 1 -print0 |
    xargs -0 -n 1 -P "$PARALLEL_JOBS" -I{} cp -r "{}" "$DST_DIR"
fi

echo "Copy completed successfully."
