#!/usr/bin/env zsh

autoload -Uz colors
colors

typeset TMPFILE="/tmp/snipkit-install-$$$RANDOM"
typeset ERROR_FILE="/tmp/snipkit-install-$$$RANDOM"

spin() {
  local \
    before_msg="$1" \
    after_msg="$2"
  local spinner
  local -a spinners
  spinners=('⠋' '⠙' '⠹' '⠸' '⠼' '⠴' '⠦' '⠧' '⠇' '⠏')

  # hide cursor
  tput civis

  while true; do
    for spinner in "${spinners[@]}"; do
      if [[ -f $TMPFILE ]]; then
        rm -f $TMPFILE
        tput cnorm
        return 1
      fi
      sleep 0.05
      printf " $fg[white]$spinner$reset_color  $before_msg\r" 2>/dev/null
    done

    [ $#jobstates = 0 ] && break
  done

  if [[ -n $after_msg ]]; then
    printf "\033[2K"
    printf " $fg_bold[blue]\U2714$reset_color  $after_msg\n"
  fi 2>/dev/null

  # show cursor
  tput cnorm || true
}

execute() {
  local arg title error
  local -a args errors

  while (($# > 0)); do
    case "$1" in
    --title)
      title="$2"
      shift
      ;;
    --error)
      errors+=("$2")
      shift
      ;;
    -*)
      echo "Invalid option: $1" >&2
      return 1
      ;;
    *)
      args+=("$1")
      ;;
    esac
    shift
  done

  {
    for arg in "${args[@]}"; do
      eval "$arg" &>$ERROR_FILE
      # When an error causes
      if [[ $status -ne 0 ]]; then
        # error mssages
        printf "\033[2K" 2>/dev/null
        printf \
          " $fg[yellow]\U26A0$reset_color  $title [$fg[red]FAILED$reset_color]\n" \
          2>/dev/null
        printf "$status\n" >"$TMPFILE"
        # additional error messages
        if (($#errors > 0)); then
          for error in "${errors[@]}"; do
            printf "    -> $error\n" 2>/dev/null
          done
        fi
      fi
    done
  } &

  spin \
    "$title" \
    "$title [$fg[green]SUCCEEDED$reset_color]"

  if [[ $status -ne 0 ]]; then
    printf "\033[2K" 2>/dev/null
    printf "\n $fg[yellow]\U26A0$reset_color  Error occurred, check the log below for more information.\n" 2>/dev/null
    cat $ERROR_FILE
    return 1
  fi
}

execute \
  --title "Adding source" \
  --error "Failed to add source" \
  "echo 'deb [trusted=yes] https://apt.fury.io/lemoony/ /' | tee /etc/apt/sources.list.d/snipkit.list" || exit 1

execute \
  --title "Updating package manager" \
  --error "Failed to update package manager" \
  "sudo apt-get update" || exit 1

execute \
  --title "Installing snipkit" \
  --error "Failed to install snipkit" \
  "sudo apt-get install -yq --no-install-recommends snipkit" || exit 1

printf " All processes are successfully completed \U1F389\n"
