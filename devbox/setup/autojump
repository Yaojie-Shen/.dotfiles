#!/usr/bin/env bash

RED='\033[0;31m'
GREEN='\033[1;32m'
BLUE='\033[1;34m'
YELLOW='\033[1;33m'
BOLD='\033[1m'
NC='\033[0m'

info() {
  printf "${BLUE}==>${NC} ${BOLD}%s${NC}\n" "$1"
}

warning() {
  printf "${YELLOW}Warning:${NC} %s\n" "$1"
}

error() {
  printf "${RED}Error:${NC} %s\n" "$1"
}

success() {
  printf "${GREEN}==>${NC} ${BOLD}%s${NC}\n" "$1"
}

inserted_start="# >>> autojump initialize >>>"
inserted_end="# <<< autojump initialize <<<"

install_autojump() {
  git clone https://github.com/wting/autojump.git
  cd autojump || return 1
  ./install.py -f || return 1
  cd .. || return 1
  rm autojump -r
}

configure_autojump() {
  local content="[[ -s /root/.autojump/etc/profile.d/autojump.sh ]] && source /root/.autojump/etc/profile.d/autojump.sh"
  local rc_file=$1

  # Check if the marker already exists
  if grep -q "$inserted_start" "$rc_file"; then
    # If the marker exists, replace the content between markers
    sed -i --follow-symlinks "/$inserted_start/,/$inserted_end/c\\$inserted_start\n$content\n$inserted_end" "$rc_file" || return 1
  else
    # If no marker exists, append the content with markers
    {
      echo "\n$inserted_start"
      echo "$content"
      echo "$inserted_end"
    } >>"$rc_file" || return 1
  fi

  return
}

info "Installing autojump..."
if [ -d "${HOME}/.autojump" ]; then
  warning "${HOME}/.autojump already exists, skipping installation."
else
  info "Installing autojump from source to ${HOME}/.autojump"
  install_autojump || exit 1
fi

info "Configuring autojump..."
configure_autojump "${HOME}/.zshrc" || exit 1
configure_autojump "${HOME}/.bashrc" || exit 1

printf " All processes are successfully completed \U1F389\n"
