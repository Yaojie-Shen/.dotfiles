#!/usr/bin/env zsh

autoload -Uz colors
colors

typeset TMPFILE="/tmp/autojump-install-$$$RANDOM"

spin() {
  local \
    before_msg="$1" \
    after_msg="$2"
  local spinner
  local -a spinners
  spinners=(⠋ ⠙ ⠹ ⠸ ⠼ ⠴ ⠦ ⠧ ⠇ ⠏)

  # hide cursor
  tput civis

  while true; do
    for spinner in "${spinners[@]}"; do
      if [[ -f $TMPFILE ]]; then
        rm -f $TMPFILE
        tput cnorm
        return 1
      fi
      sleep 0.05
      printf " $fg[white]$spinner$reset_color  $before_msg\r" 2>/dev/null
    done

    [ $#jobstates = 0 ] && break
  done

  if [[ -n $after_msg ]]; then
    printf "\033[2K"
    printf " $fg_bold[blue]\U2714$reset_color  $after_msg\n"
  fi 2>/dev/null

  # show cursor
  tput cnorm || true
}

execute() {
  local arg title error
  local -a args errors

  while (($# > 0)); do
    case "$1" in
    --title)
      title="$2"
      shift
      ;;
    --error)
      errors+=("$2")
      shift
      ;;
    -* | --*)
      return 1
      ;;
    *)
      args+=("$1")
      ;;
    esac
    shift
  done

  {
    for arg in "${args[@]}"; do
      ${~${=arg}} &>/dev/null
      # When an error causes
      if [[ $status -ne 0 ]]; then
        # error mssages
        printf "\033[2K" 2>/dev/null
        printf \
          " $fg[yellow]\U26A0$reset_color  $title [$fg[red]FAILED$reset_color]\n" \
          2>/dev/null
        printf "$status\n" >"$TMPFILE"
        # additional error messages
        if (($#errors > 0)); then
          for error in "${errors[@]}"; do
            printf "    -> $error\n" 2>/dev/null
          done
        fi
      fi
    done
  } &

  spin \
    "$title" \
    "$title [$fg[green]SUCCEEDED$reset_color]"

  if [[ $status -ne 0 ]]; then
    printf "\033[2K" 2>/dev/null
    printf "Oops \U2620 ... Try again!\n" 2>/dev/null
    exit 1
  fi
}

check() {
  if [[ -d "${HOME}/.autojump" ]]; then
    return 1
  fi
}

install() {
  git clone https://github.com/wting/autojump.git || exit 1
  cd autojump || exit 1
  ./install.py || exit 1
  cd .. || exit 1
  rm autojump -r
}

config() {
  echo "
  [[ -s /root/.autojump/etc/profile.d/autojump.sh ]] && source /root/.autojump/etc/profile.d/autojump.sh
  " >>"${HOME}/.zshrc"
  echo "
  [[ -s /root/.autojump/etc/profile.d/autojump.sh ]] && source /root/.autojump/etc/profile.d/autojump.sh
  " >>"${HOME}/.bashrc"
  return
}

execute \
  --title \
  "Checking if ~/.autojump already exist" \
  --error \
  "~/.autojump already exist" \
  "check"

execute \
  --title \
  "Installing autojump from source to ~/.autojump" \
  --error \
  "Is git installed?" \
  "install"

execute \
  --title \
  "Writing config to rc files" \
  "config"

printf " All processes are successfully completed \U1F389\n"
